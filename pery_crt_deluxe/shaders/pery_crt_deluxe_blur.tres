[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=1]
resource_local_to_scene = true
code = "shader_type canvas_item;
render_mode blend_add;

uniform float blurA : hint_range(0.0, 5.0, 0.1) = 0.0;
uniform float blurB : hint_range(0.0, 5.0, 0.1) = 1.0;
uniform float blurC : hint_range(0.0, 5.0, 0.1) = 3.0;

uniform float offset : hint_range(0.0, 10.0, 0.1) = 0.0;
uniform float weight : hint_range(0.0, 1.0, 0.01) = 0.0;

vec3 chromatic (sampler2D _texture, vec2 uv, float o, float bl){
	float r = textureLod(_texture, uv + vec2(o,0.0), bl).r;
	float g = textureLod(_texture, uv, bl).g;
	float b = textureLod(_texture, uv - vec2(o,0.0), bl).b;
	
	return vec3(r,g,b);
}
void fragment() {
	
	float off = offset * SCREEN_PIXEL_SIZE.x;
	vec3 t1 = chromatic(SCREEN_TEXTURE, SCREEN_UV,off, blurA);
	vec3 t2 = chromatic(SCREEN_TEXTURE, SCREEN_UV,off*1.5, blurB);
	vec3 t3 = chromatic(SCREEN_TEXTURE, SCREEN_UV,off*2.0, blurC);
	vec3 sb =  vec3((t1+t2+t3)/3.0);

	COLOR = vec4(sb,weight);
} 
"

[resource]
resource_local_to_scene = true
shader = SubResource( 1 )
shader_param/blurA = 1.3
shader_param/blurB = 1.6
shader_param/blurC = 1.8
shader_param/offset = 1.0
shader_param/weight = 1.0
